import os
import shutil
import random
from collections import defaultdict

# =========================
# üìÅ Paths
# =========================
dataset_dir = 'C:/Users/Acer/Desktop/Project/PetBreed_Identifier/model/mobilenetv2/datasets' # ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
output_base = 'C:/Users/Acer/Desktop/Project/PetBreed_Identifier/model/mobilenetv2/datasets_age' # ‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏á‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•

# =========================
# üî¢ Settings
# =========================
splits = ['train', 'valid', 'test']
split_ratio = {'train': 0.8, 'valid': 0.15, 'test': 0.05}
random_seed = 42  # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤ seed ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ
random.seed(random_seed) # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ seed

# =========================
# üóë ‡∏•‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÄ‡∏Å‡πà‡∏≤ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
# =========================
if os.path.exists(output_base):
    shutil.rmtree(output_base)

# =========================
# Step 1: ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå .jpg ‡∏à‡∏≤‡∏Å‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏≤‡∏™
# =========================
class_to_files = defaultdict(list)
for class_folder in os.listdir(dataset_dir):   # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ñ‡∏•‡∏≤‡∏™
    class_path = os.path.join(dataset_dir, class_folder)    # ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ñ‡∏•‡∏≤‡∏™
    if not os.path.isdir(class_path):   # ‡∏Ç‡πâ‡∏≤‡∏°‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
        continue
    for file in os.listdir(class_path): # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå .jpg
        if file.lower().endswith('.jpg'):   # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            class_to_files[class_folder].append(os.path.join(class_path, file)) # ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏ï‡πá‡∏°‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå

# =========================
# Step 2: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
# =========================
for split in splits:    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå train, valid, test
    for class_name in class_to_files.keys():    # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏≤‡∏™
        os.makedirs(os.path.join(output_base, split, class_name), exist_ok=True)    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏¢‡πà‡∏≠‡∏¢

# =========================
# Step 3: ‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
# =========================
def copy_images(split, image_paths, class_name):    # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
    for image_path in image_paths:  # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
        file_name = os.path.basename(image_path)    # ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
        dst = os.path.join(output_base, split, class_name, file_name)   # ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
        shutil.copy2(image_path, dst)   # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå

for class_name, image_list in class_to_files.items():   # ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏•‡∏≤‡∏™
    random.shuffle(image_list)  # ‡∏™‡∏∏‡πà‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå
    total = len(image_list) # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    
    # ‡πÉ‡∏ä‡πâ round() ‡πÅ‡∏ó‡∏ô int() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÄ‡∏®‡∏©‡∏™‡∏∞‡∏™‡∏°
    train_count = round(total * split_ratio['train'])   # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏ä‡∏∏‡∏î train
    val_count = round(total * split_ratio['valid'])    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏ä‡∏∏‡∏î valid
    test_count = total - train_count - val_count  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏ä‡∏∏‡∏î test
    
    # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå
    copy_images('train', image_list[:train_count], class_name)  # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå train
    copy_images('valid', image_list[train_count:train_count + val_count], class_name) # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå valid
    copy_images('test', image_list[train_count + val_count:], class_name)   # ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå test

    # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ
    print(f"{class_name} ‚Üí train: {train_count}, valid: {val_count}, test: {test_count}")   # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πà‡∏≠‡∏Ñ‡∏•‡∏≤‡∏™

# =========================
# ‚úÖ Finished
# =========================
total_files = sum(len(files) for files in class_to_files.values())  # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏ó‡∏≤‡∏á
train_files = sum(len(os.listdir(os.path.join(output_base, 'train', c))) for c in class_to_files)   # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå train
valid_files = sum(len(os.listdir(os.path.join(output_base, 'valid', c))) for c in class_to_files)   # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå valid
test_files  = sum(len(os.listdir(os.path.join(output_base, 'test', c)))  for c in class_to_files)   # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå test

print("\nüìä Summary:")
print(f"Total original images: {total_files}")
print(f"Train: {train_files}, Valid: {valid_files}, Test: {test_files}")
print(f"All images after split: {train_files + valid_files + test_files}")
print("‚úÖ Dataset split complete and ready for training.")

"""
datasets_age
'train': 0.8, 'valid': 0.15, 'test': 0.05
cat_adult ‚Üí train: 1262, valid: 237, test: 79
cat_kitten ‚Üí train: 1270, valid: 238, test: 79
cat_senior ‚Üí train: 1229, valid: 230, test: 77
cat_young ‚Üí train: 1250, valid: 234, test: 79
dog_adult ‚Üí train: 1260, valid: 236, test: 79
dog_puppy ‚Üí train: 1265, valid: 237, test: 79
dog_senior ‚Üí train: 1289, valid: 242, test: 80
dog_young ‚Üí train: 1279, valid: 240, test: 80

üìä Summary:
Total original images: 12630
Train: 10104, Valid: 1894, Test: 632
All images after split: 12630
‚úÖ Dataset split complete and ready for training.
"""

"""
datasets_ages
'train': 0.8, 'valid': 0.1, 'test': 0.1
cat_adult ‚Üí train: 1262, valid: 158, test: 158
cat_kitten ‚Üí train: 1270, valid: 159, test: 158
cat_senior ‚Üí train: 1229, valid: 154, test: 153
cat_young ‚Üí train: 1250, valid: 156, test: 157
dog_adult ‚Üí train: 1260, valid: 158, test: 157
dog_puppy ‚Üí train: 1265, valid: 158, test: 158
dog_senior ‚Üí train: 1289, valid: 161, test: 161
dog_young ‚Üí train: 1279, valid: 160, test: 160

üìä Summary:
Total original images: 12630
Train: 10104, Valid: 1264, Test: 1262
All images after split: 12630
‚úÖ Dataset split complete and ready for training.
"""